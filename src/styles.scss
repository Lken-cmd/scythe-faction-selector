
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use 'sass:map';

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$theme-primary: mat.define-palette(mat.$grey-palette, 500, 400, 600);
$theme-accent: mat.define-palette(mat.$brown-palette, 400, 300, 500);
$theme-warn: mat.define-palette(mat.$red-palette);

$theme-typography: mat.define-typography-config($font-family: 'JetBrains Mono');

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat.define-light-theme((color: (primary: $theme-primary,
        accent: $theme-accent,
        warn: $theme-warn,
      ),
      typography: $theme-typography,
      density: 0));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);

/* You can add global styles to this file, and also import other style files */

$color-config: mat.get-color-config($theme);
$background-palette: map.get($color-config, 'background');
$background: map.merge($background-palette,
    ("background": red,
    ));

@import url(fonts.scss);

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: 'JetBrains Mono', monospace;
}

.alternating-color-list-item:nth-child(even) {
  background-color: mat.get-color-from-palette($background-palette, hover);
}